services:
  app:
    container_name: go-app
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      test-db:
        condition: service_healthy
    ports:
      - 8080:8080
      - 2345:2345 # delveと通信用のポート
    volumes:
      - ./backend:/go/src/app/backend
    tty: true
  frontend:
    container_name: react
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    depends_on:
      - app
    ports:
      - 3000:3000
    environment:
      - WATCHPACK_POLLING=true
    tty: true
    volumes:
      - ./frontend:/go/src/app/frontend
  db:
    image: postgres:17
    container_name: postgres-db
    ports:
      - 5432:5432
    volumes:
      - ./backend/migrations:/docker-entrypoint-initdb.d
      - ./backend/data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} || exit 1",
        ]
      interval: 10s
      retries: 5
      start_period: 20s
  test-db:
    image: postgres:17
    container_name: test-postgres-db
    ports:
      - 5433:5432
    volumes:
      - ./backend/migrations:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_database
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} || exit 1",
        ]
      interval: 10s
      retries: 5
      start_period: 20s
